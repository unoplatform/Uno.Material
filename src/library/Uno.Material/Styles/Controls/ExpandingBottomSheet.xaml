<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:toolkit="using:Uno.UI.Toolkit">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Application/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<x:Double x:Key="MaterialExpandingBottomSheetElevation">8</x:Double>
	<CornerRadius x:Key="MaterialExpandingBottomSheetToggleButtonBorderRadius">22,0,0,0</CornerRadius>

	<Style x:Key="MaterialExpandingBottomSheetStyle"
		   TargetType="controls:ExpandingBottomSheet">

		<Setter Property="HorizontalAlignment"
				Value="Stretch" />
		<Setter Property="HorizontalContentAlignment"
				Value="Stretch" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="VerticalContentAlignment"
				Value="Stretch" />
		<Setter Property="ExpandedHeaderContentTemplate"
				Value="{StaticResource ExpandedHeaderTemplate}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ExpandingBottomSheet">
					<Grid x:Name="GridRoot"
						  Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="PointerFocused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>

							<VisualStateGroup x:Name="SheetStates">
								<VisualState x:Name="Collapsed">
									<VisualState.Setters>
										<Setter Target="Part_ExpandedContentPresenter.IsHitTestVisible"
												Value="False" />
									</VisualState.Setters>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ExpandedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="Y"
														 Duration="0:0:0.35"
														 From="0"
														 To="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="Part_ExpandedContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 BeginTime="0:0:0.2"
														 Duration="0:0:0.15"
														 From="1"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="Part_CollapsedContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 BeginTime="0:0:0.25"
														 Duration="0:0:0.1"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="Part_MinimalCollapsedContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 BeginTime="0:0:0.25"
														 Duration="0:0:0.1"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Expanded">

									<VisualState.Setters>
										<Setter Target="Part_ExpandedContentPresenter.IsHitTestVisible"
												Value="True" />
										<Setter Target="Part_ExpandedContentPresenter.Opacity"
												Value="1" />
									</VisualState.Setters>

									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="ExpandedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="Y"
														 Duration="0:0:0.35"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="Part_CollapsedContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.2"
														 From="1"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="Part_MinimalCollapsedContentPresenter"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.2"
														 From="1"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<VisualStateGroup x:Name="CollapsedStates">
								<VisualState x:Name="CollapsedContent">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CollapsedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="X"
														 Duration="0:0:0.1"
														 From="{Binding MinimalCollapsedPresenterWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="MinimalCollapsedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="X"
														 BeginTime="0:0:0.1"
														 Duration="0:0:0.2"
														 To="{Binding MinimalCollapsedPresenterWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="MinimalContent">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="CollapsedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="X"
														 Duration="0:0:0.2"
														 To="{Binding CollapsedPresenterWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="MinimalCollapsedContentPresenter_TranslateTransform"
														 Storyboard.TargetProperty="X"
														 Duration="0:0:0.1"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

							<!-- Handling of WideScreen devices -->
							<VisualStateGroup>
								<!-- Known Issue - Must be applied before smalldevices else issues on wasm and ios -->
								<VisualState x:Name="OtherDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="720" />
									</VisualState.StateTriggers>
									<VisualState.Setters>
										<Setter Target="GridRoot.Height"
												Value="{Binding FullScreenPresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
										<Setter Target="GridRoot.Width"
												Value="{Binding FullScreenPresenterWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
										<Setter Target="GridRoot.HorizontalAlignment"
												Value="Right" />
										<Setter Target="GridRoot.VerticalAlignment"
												Value="Bottom" />
									</VisualState.Setters>
								</VisualState>

								<VisualState x:Name="SmallDevices">
									<VisualState.StateTriggers>
										<AdaptiveTrigger MinWindowWidth="0" />
									</VisualState.StateTriggers>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Expanded part-->
						<toolkit:ElevatedView x:Name="Part_ExpandedContentPresenter"
											  BorderBrush="{ThemeResource MaterialOverlayColor}"
											  BorderThickness="1"
											  Elevation="{StaticResource MaterialExpandingBottomSheetElevation}"
											  Opacity="0">
							<toolkit:ElevatedView.RenderTransform>
								<TranslateTransform x:Name="ExpandedContentPresenter_TranslateTransform"
													Y="{Binding PresenterHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
							</toolkit:ElevatedView.RenderTransform>

							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>

								<toolkit:ElevatedView Background="{TemplateBinding Background}"
													  Elevation="{StaticResource MaterialExpandingBottomSheetElevation}">
									<StackPanel Background="{ThemeResource MaterialOnBackgroundColor}">

										<Button x:Name="Part_ExpandedContentButton"
												Background="{ThemeResource ExpandingBottomSheetBackgroundBrush}"
												Content="{TemplateBinding ExpandedContent}"
												ContentTemplate="{TemplateBinding ExpandedHeaderContentTemplate}"
												CornerRadius="0"
												Style="{StaticResource MaterialExpandingBottomSheetButtonStyle}" />
									</StackPanel>
								</toolkit:ElevatedView>

								<ContentPresenter Grid.Row="1"
												  ContentTemplate="{TemplateBinding ExpandedContentTemplate}"
												  HorizontalAlignment="Stretch"
												  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="Stretch"
												  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
												  AutomationProperties.AccessibilityView="Raw" />
							</Grid>
						</toolkit:ElevatedView>

							<toolkit:ElevatedView x:Name="Part_MinimalCollapsedContentPresenter"
												  Background="{TemplateBinding Background}"
												  Elevation="{StaticResource MaterialExpandingBottomSheetElevation}"
												  HorizontalAlignment="Right"
												  VerticalAlignment="Bottom">
								
								<toolkit:ElevatedView.RenderTransform>
									<TranslateTransform x:Name="MinimalCollapsedContentPresenter_TranslateTransform"
														X="{Binding MinimalCollpasedPresenterWidth, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />
								</toolkit:ElevatedView.RenderTransform>

								<!-- Minimal Collapsed Content -->
								<Button x:Name="Part_MinimalCollapsedContentButton"
										ContentTemplate="{TemplateBinding MinimalCollapsedContentTemplate}"
										Style="{StaticResource MaterialExpandingBottomSheetButtonStyle}"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom" />
							</toolkit:ElevatedView>

							<!-- Elevated View -->
							<toolkit:ElevatedView x:Name="Part_CollapsedContentPresenter"
												  Background="{TemplateBinding Background}"
												  Elevation="{StaticResource MaterialExpandingBottomSheetElevation}"
												  HorizontalAlignment="Right"
												  VerticalAlignment="Bottom">
								<toolkit:ElevatedView.RenderTransform>
									<TranslateTransform x:Name="CollapsedContentPresenter_TranslateTransform" />
								</toolkit:ElevatedView.RenderTransform>

								<!-- Collapsed Content -->
								<Button x:Name="Part_CollapsedContentButton"
										Content="{TemplateBinding CollapsedContent}"
										ContentTemplate="{TemplateBinding CollapsedContentTemplate}"
										Style="{StaticResource MaterialExpandingBottomSheetButtonStyle}"
										HorizontalAlignment="Right"
										VerticalAlignment="Bottom" />
							</toolkit:ElevatedView>
						</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Expanded Header Template -->
	<DataTemplate x:Key="ExpandedHeaderTemplate">
		<StackPanel Orientation="Horizontal"
					Margin="0,8">

			<Viewbox Height="12"
					 Width="12"
					 Margin="0,4,0,0"
					 VerticalAlignment="Center">
				<FontIcon Glyph="&#xE0E5;"
						  FontFamily="{ThemeResource SymbolThemeFontFamily}"
						  Foreground="{ThemeResource ExpandingBottomSheetForegroundBrush}" />
			</Viewbox>

			<TextBlock Text="{Binding}"
					   Foreground="{ThemeResource ExpandingBottomSheetForegroundBrush}"
					   Margin="20,0,0,0"
					   Style="{StaticResource MaterialHeadline6}" />
		</StackPanel>
	</DataTemplate>

	<Style x:Key="MaterialExpandingBottomSheetButtonStyle"
		   TargetType="Button">
		<Setter Property="Foreground"
				Value="{ThemeResource ExpandingBottomSheetForegroundBrush}" />
		<Setter Property="Background"
				Value="{ThemeResource ExpandingBottomSheetBackgroundBrush}" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{ThemeResource ToggleButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource MaterialExpandingBottomSheetToggleButtonBorderRadius}" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ToggleButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ToggleButtonFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="0:0:0.25"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Border for PointedOver State -->
						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<!-- Border for Focus State -->
						<Border x:Name="FocusedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!-- Border for Dragged/Selected State -->
						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!-- Ripple effect -->
						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Content="{TemplateBinding Content}"
										 ContentTemplate="{TemplateBinding ContentTemplate}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
